<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	 
	<!-- Login Handler -->
   	<bean id="LoginSuccessHandler" class="org.kpu.myweb.handler.LoginSuccessHandler">
			<property name="username" value="username"/>
			<property name="defaultUrl" value="/" />		
	</bean>	
	<bean id="LoginFailureHandler" class="org.kpu.myweb.handler.LoginFailureHandler">
			<property name="msg" value="msg"/>
			<property name="defaultUrl" value="/" />		
	</bean>	
	
	<!-- Encode Password -->
	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	
	<!-- 검사 URL -->
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true"/>
		
		<security:intercept-url pattern="/" access="permitAll()" />
		<security:intercept-url pattern="/login" access="permitAll()" />
		
		
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/enterprise/post" access="hasAuthority('ROLE_ENTERPRISE')" />
		<security:intercept-url pattern="/youtuber/update" access="hasAuthority('ROLE_YOUTUBER')" />
		<security:intercept-url pattern="/youtuber/profile" access="hasAnyAuthority('ROLE_YOUTUBER','ROLE_ENTERPRISE')" />
		
		<security:form-login
			always-use-default-target="true"
			login-page="/login"
			username-parameter="username"
			password-parameter="password"
			authentication-success-handler-ref="LoginSuccessHandler"
			authentication-failure-handler-ref="LoginFailureHandler" />
			
		<security:logout
			logout-url="/logout"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="true"/>
			
		<security:access-denied-handler error-page="/error"/>
			
	</security:http>

	<!-- 데이터베이스 인증 정보 관리 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query = "select username, password, true from user where username = ?"
				authorities-by-username-query = "select username, authorities from user where username = ?"
			/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>